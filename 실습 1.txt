SELECT COUNT(*) FROM [Customers]
WHERE Country = 'France'

SELECT AVG(Price) FROM [Products]

SELECT COUNT(OrderID) FROM Orders

SELECT MIN(PRICE), MAX(PRICE) FROM Products 

SELECT MAX(PRICE) FROM Products 

--국가별 고객수를 조회하고 그 중 5명 초과인 국가만 조회
SELECT COUNT(CustomerID) AS NUM, Country FROM Customers 
GROUP BY Country
HAVING NUM > 5
ORDER BY NUM DESC

SELECT COUNT(*) AS NUM, Country FROM Customers 
GROUP BY Country

SELECT COUNT(*) AS NUM, Country, City FROM Customers 
GROUP BY Country, City
ORDER BY NUM

SELECT * FROM [Customers] INNER JOIN Orders ON Customers.CustomerID = Orders.CustomerID

공급자와 상품 
SupplierID

# 필요한 정보가 어디있는지 테이블을 먼저 선택
중간에 엮어진 테이블 모두 조인 
from 에 묶어야 할 테이블 추가
where에 테이블을 묶는 조건 추가 

-- 런던에 위치한 공급자(Supplier)가 생산한 상품 목록 조회 : 도시명, 공급자명, 상품명, 상품가격
SELECT Suppliers.City as '도시명',Suppliers.SupplierName as '공급자명', Products.ProductName as '상품명',Products.Price as '상품가격'
FROM [Suppliers] S
INNER JOIN Products P
ON Products.SupplierID = Suppliers.SupplierID
WHERE City = 'Londona'

<INNER JOIN 할 때>
SELECT S.City AS '도시명', S.SupplierName AS '공급자명', P.Productname AS '상품명', P.Price AS '상품가격'
FROM Suppliers S, Products P
WHERE S.SupplierID = P.SupplierID
AND S.City = 'Londona'

-- 분류가 Seafood 인 상품 목록 (모든 컬럼 조회) : 분류, 상품 모든 컬럼
Select *
from Categories
JOIN Products
ON Categories.CategoryID = Products.CategoryID
WHERE CategoryName = 'Seafood'

<INNER JOIN 할 때>
SELECT CategoryName, P.*
FROM Categories C, Products P
WHERE C.CategoryID = P.CategoryID
AND C.CategoryName = 'Seafood'

-- 공급자(Supplier) 국가별, 카테고리 별 상품 건수, 평균가격 : 국가명, 카테고리명, 상품건수, 평균가격
select suppliers.Country as '국가명', products.CategoryID as '카테고리명', COUNT(*) as '상품건수', AVG(products.Price) as '평균가격'
from suppliers 
join products 
on suppliers.SupplierID = products.SupplierID
GROUP BY suppliers.Country, products.CategoryID

SELECT Country, CategoryName, COUNT(*) 상품건수, AVG(Price) 평균가격
FROM Suppliers S, Categories C, Products P
WHERE S.SupplierID = P.SupplierID
AND C.CategoryID = P.CategoryID
GROUP BY Country, CategoryName

-- 상품 카테고리별, 국가별, 도시별 주문건수 2건 이상인 목록 : 카테고리명, 국가명, 도시명, 주문건수
SELECT C.CategoryName AS '카테고리명',S.Country AS '국가명',S.City AS '도시명', COUNT(*) AS '주문건수' FROM Products P 
join Suppliers S on (S.SupplierID = P.SupplierID)
INNER JOIN Categories C ON (C.CategoryID = P.CategoryID)
GROUP BY P.CategoryID, S.Country, S.City

SELECT C.CategoryName 카테고리명, Cu.Country, Cu.City, COUNT(O.OrderID)주문건수 
FROM Customers Cu, Orders O, OrderDetails OD, Products P, Categories C
WHERE Cu.CustomerID = O.CustomerID
AND O.OrderID = OD.orderID
AND OD.ProductID = P.ProductID
AND P.CategoryID = C.CategoryID
GROUP BY 카테고리명, Cu.Country, Cu.City
HAVING 주문건수 >= 2
추가 설명: GROUP BY, HAVING은 틀이 데이터가 만들어진 후, 조건을 다는 것(필터링 같은 느낌)

-- 주문자, 주문정보, 직원정보, 배송자정보 통합 조회 : 고객컬럼 전체, 주문정보 컬럼 전체, 배송자 정보 컬럼 전체 (4개 테이블 조인)
SELECT * FROM Customers C
 JOIN Orders O on C.CustomerID = O.CustomerID 
 JOIN EMPLOYEES E ON  E.EmployeeID = O.EmployeeID
 JOIN SHIPPERS S ON S.ShipperID = O.ShipperID

SELECT C.*, O.*, S.*
FROM Customers C, Employees E, Shippers S, Orders O
WHERE C.CustomerID = O.CustomerID
AND E.EmployeeID = O.EmployeeID
AND S.ShipperID = O.ShipperID 
